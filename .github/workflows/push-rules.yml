name: Push Rules and Exceptions

on:
  push:
    branches: [master]
    paths:
      - "detection-rules/rules/**"
      - "custom/**"
      - "exceptions/**"
      - "lists/**"
      - ".github/workflows/push-rules.yml"
  workflow_dispatch:
    inputs:
      clean:
        description: "Reset the Terraform State"
        required: true
        default: false


jobs:
  terraform:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/operatorequals/terraform-provider-elastic-siem:v0.3.0
    env:
      KIBANA_USERNAME: "${{ secrets.KIBANA_USERNAME }}"
      KIBANA_PASSWORD: "${{ secrets.KIBANA_PASSWORD }}"
      KIBANA_URL: "${{ secrets.KIBANA_URL }}"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # Needed to also pull the `elastic/detection-rules` git submodule
        submodules: 'true'

    - name: Get State file from Artifact
      uses: dawidd6/action-download-artifact@v2.17.0
      if: ${{ github.event.inputs.clean }} != 'true'
      with:
        workflow: push-rules.yml
        name: tfstate
        workflow_conclusion: completed

    - name: Terraform Apply
      if: always()
      run: |
        # Bring Terraform provider to home directory
        mkdir -p $HOME/.terraform.d/
        cp -r /root/.terraform.d/* $HOME/.terraform.d/

        # Bring Elastic SIEM provider scripts to current directory
        cp -r /universe_scripts universe_scripts/

        terraform init
        terraform apply -no-color -auto-approve > tf-output

        echo "================== Last 100 Lines =================="
        tail -100 tf-output
        echo "================== ============== =================="
      env:
        KIBANA_ML_ENABLED: false

    - name: Store State file from Artifact
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: tfstate
        path: terraform.tfstate

    - name: Store Terraform Output
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: output
        path: tf-output

